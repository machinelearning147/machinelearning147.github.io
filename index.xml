<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shravan Kumar</title>
    <link>https://machinelearning147.github.io/</link>
    <description>Recent content on Shravan Kumar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Sep 2018 11:14:01 +0530</lastBuildDate>
    
	<atom:link href="https://machinelearning147.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get set go with Tensorflow</title>
      <link>https://machinelearning147.github.io/posts/get&#43;set&#43;go&#43;-&#43;tensorflow/</link>
      <pubDate>Mon, 10 Sep 2018 11:14:01 +0530</pubDate>
      
      <guid>https://machinelearning147.github.io/posts/get&#43;set&#43;go&#43;-&#43;tensorflow/</guid>
      <description>Pip installation !pip install tensorflow!pip install tensorflow-gpu  Anaconda Installation !conda install -c conda-forge tensorflow!conda install -c anaconda tensorflow-gpu  Basic Usage 1. Building the graph import tensorflow as tf matrix1 = tf.constant([[3., 3.]]) matrix2 = tf.constant([[2.],[2.]]) print(matrix1, matrix2) product = tf.matmul(matrix2, matrix1)  Tensor(&amp;quot;Const_4:0&amp;quot;, shape=(1, 2), dtype=float32) Tensor(&amp;quot;Const_5:0&amp;quot;, shape=(2, 1), dtype=float32)  2.Launching the graph in a session Method 1 # Launch the default graph. sess = tf.Session() result = sess.</description>
    </item>
    
    <item>
      <title>My Third Post</title>
      <link>https://machinelearning147.github.io/vim-tips/</link>
      <pubDate>Tue, 28 Aug 2018 00:13:57 +0530</pubDate>
      
      <guid>https://machinelearning147.github.io/vim-tips/</guid>
      <description>&lt;h2 id=&#34;vim-graphical-cheat-sheet&#34;&gt;vim graphical cheat sheet&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://machinelearning147.github.io/https://img.zhaohuabing.com/in-post/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My Second Post</title>
      <link>https://machinelearning147.github.io/posts/my-second-post/</link>
      <pubDate>Sat, 11 Aug 2018 11:14:01 +0530</pubDate>
      
      <guid>https://machinelearning147.github.io/posts/my-second-post/</guid>
      <description>This is my second post with HUGO Preliminary # Import combinations with replacements from itertools from itertools import combinations_with_replacement  Create a list of objects # Create a list of objects to combine list_of_objects = [&#39;warplanes&#39;, &#39;armor&#39;, &#39;infantry&#39;]  Find all combinations (with replacement) for the list # Create an empty list object to hold the results of the loop combinations = [] # Create a loop for every item in the length of list_of_objects, that, for i in list(range(len(list_of_objects))): # Finds every combination (with replacement) for each object in the list combinations.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://machinelearning147.github.io/posts/my-first-post/</link>
      <pubDate>Sat, 11 Aug 2018 11:07:27 +0530</pubDate>
      
      <guid>https://machinelearning147.github.io/posts/my-first-post/</guid>
      <description>My First HUGO post Table of Contents  TOC {:toc}  Basic Functionality Headers Header 1 Header 2 Header 3 Styling Bold
Italics
Bold and Italics
Lists  Item 1
 Item 2
   Unordered Item
 Sub Item 1   Bold Sub Sub Ordered Item   Links In-Line
I&amp;rsquo;m a reference-style link 1
I&amp;rsquo;m a reference-style link 1
Images Hold your pointer clicked over the image to expand the view.</description>
    </item>
    
  </channel>
</rss>